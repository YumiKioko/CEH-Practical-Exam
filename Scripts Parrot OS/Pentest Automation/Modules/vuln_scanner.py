import subprocess
import logging

# Função de verificação de SQLi
def check_sqli(target_url):
    # Técnica simples para testar SQLi
    return "sqli" in target_url  # Simulação de um check

# Função de verificação de XSS
def check_xss(target_url):
    return "xss" in target_url  # Simulação de um check

# Função de verificação de LFI
def check_lfi(target_url):
    return "lfi" in target_url  # Simulação de um check

# Função de verificação de RFI
def check_rfi(target_url):
    return "rfi" in target_url  # Simulação de um check

# Função para rodar o SQLmap
def run_sqlmap(target_url):
    logging.info(f"Executando SQLmap em {target_url}...")
    try:
        result = subprocess.run(['sqlmap', '-u', target_url, '--batch', '--level=5', '--risk=3', '--threads=10'],
                                stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        output = result.stdout.decode('utf-8')
        if "sqlmap identified the following" in output:
            logging.info(f"SQLi vulnerabilidade encontrada em {target_url}")
        else:
            logging.info(f"Nenhuma vulnerabilidade SQLi encontrada em {target_url}")
    except Exception as e:
        logging.error(f"Erro ao executar sqlmap: {str(e)}")

# Função para rodar o WPScan
def run_wpscan(target_url):
    logging.info(f"Executando WPScan em {target_url}...")
    try:
        result = subprocess.run(['wpscan', '--url', target_url, '--enumerate', 'vp', '--batch'],
                                stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        output = result.stdout.decode('utf-8')
        if "vulnerabilities found" in output:
            logging.info(f"Vulnerabilidades do WordPress encontradas em {target_url}")
        else:
            logging.info(f"Nenhuma vulnerabilidade do WordPress encontrada em {target_url}")
    except Exception as e:
        logging.error(f"Erro ao executar wpscan: {str(e)}")

# Função principal de verificação de vulnerabilidades
def run_vuln_scanner(target_url):
    logging.info(f"Iniciando verificação de vulnerabilidades em {target_url}")
    print(f"[*] Iniciando verificação de vulnerabilidades em {target_url}")

    if check_sqli(target_url):
        logging.info(f"[!] SQLi vulnerabilidade encontrada em {target_url}")
        run_sqlmap(target_url)  # Rodando o sqlmap
    if check_xss(target_url):
        logging.info(f"[!] XSS vulnerabilidade encontrada em {target_url}")
    if check_lfi(target_url):
        logging.info(f"[!] LFI vulnerabilidade encontrada em {target_url}")
    if check_rfi(target_url):
        logging.info(f"[!] RFI vulnerabilidade encontrada em {target_url}")

    # Rodando WPScan para detectar vulnerabilidades no WordPress
    run_wpscan(target_url)

    logging.info(f"Verificação de vulnerabilidades finalizada em {target_url}")
