from jinja2 import Template

def generate_html_report(target, reports_dir):
    # Carregar o template HTML
    template = """
    <html>
        <head>
            <title>Relatório de Pentest - {{ target }}</title>
            <style>
                body { font-family: Arial, sans-serif; background-color: #f4f4f4; color: #333; margin: 0; padding: 20px; }
                h1 { color: #0056b3; }
                .report-container { background: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); }
                .vulnerability { margin-bottom: 20px; }
                .vulnerability h2 { color: #d9534f; }
                .vulnerability p { font-size: 16px; }
                .footer { text-align: center; font-size: 14px; margin-top: 30px; color: #888; }
            </style>
        </head>
        <body>
            <div class="report-container">
                <h1>Relatório de Pentest - {{ target }}</h1>
                <div class="vulnerability">
                    <h2>Vulnerabilidades Detectadas</h2>
                    <ul>
                        {% for vuln in vulnerabilities %}
                            <li>{{ vuln }}</li>
                        {% endfor %}
                    </ul>
                </div>
                <div class="footer">
                    <p>Gerado automaticamente. Todos os direitos reservados.</p>
                </div>
            </div>
        </body>
    </html>
    """
    
    # Defina as vulnerabilidades encontradas
    vulnerabilities = []
    if check_sqli(target):
        vulnerabilities.append("SQL Injection (SQLi) Detectado")
    if check_xss(target):
        vulnerabilities.append("Cross-Site Scripting (XSS) Detectado")
    if check_lfi(target):
        vulnerabilities.append("Local File Inclusion (LFI) Detectado")
    if check_rfi(target):
        vulnerabilities.append("Remote File Inclusion (RFI) Detectado")
    
    # Gerar o relatório HTML
    html_report = Template(template).render(target=target, vulnerabilities=vulnerabilities)
    
    # Salvar o relatório no diretório de relatórios
    with open(f"{reports_dir}/pentest_report.html", "w") as f:
        f.write(html_report)
    print(f"Relatório HTML gerado: {reports_dir}/pentest_report.html")
